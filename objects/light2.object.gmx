<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_lightbulb</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surf=surface_create(room_width,room_height)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_set_target(surf)

draw_clear(c_black)
draw_background(bkLight_Lamp,x-240,y-240)



if global.lights=1
{
draw_set_color(c_white)

with OneWay
{
if point_distance(x,y,other.x,other.y)&lt;=480
{
var fleh;
fleh=480-(point_distance(x+6,y,other.x,other.y))


draw_set_color(c_black)
draw_rectangle(x,y,x+12,y,0)

draw_primitive_begin(pr_trianglestrip)
draw_vertex(x+12,y)
draw_vertex(x-(other.x-x)*30+fleh,y-(other.y-y)*30)
draw_vertex(x,y)
draw_vertex(x-(other.x-x)*30,y-(other.y-y)*30)
draw_primitive_end()
}
}

with HPlat
{
if point_distance(x,y,other.x,other.y)&lt;=480
{
var fleh;
fleh=480-(point_distance(x+6,y,other.x,other.y))


draw_set_color(c_black)
draw_rectangle(x,y,x+24,y,0)

draw_primitive_begin(pr_trianglestrip)
draw_vertex(x+24,y)
draw_vertex(x-(other.x-x)*30+fleh,y-(other.y-y)*30)
draw_vertex(x,y)
draw_vertex(x-(other.x-x)*30,y-(other.y-y)*30)
draw_primitive_end()
}
}

with block
{

if point_distance(x,y,other.x,other.y)&lt;=480
{
var fleh;
fleh=480-(point_distance(x+6,y+6,other.x,other.y))


draw_set_color(c_black)
draw_rectangle(x,y,x+12,y+12,0)

draw_rectangle(x-(other.x-x)*30,y-(other.y-y)*30,x-(other.x-x)*30+fleh,y-(other.y-y)*30+fleh,0)

draw_primitive_begin(pr_trianglestrip)
draw_vertex(x,y+12)
draw_vertex(x-(other.x-x)*30,y-(other.y-y)*30+fleh)
draw_vertex(x+12,y+12)
draw_vertex(x-(other.x-x)*30+fleh,y-(other.y-y)*30+fleh)

draw_primitive_end()

draw_primitive_begin(pr_trianglestrip)
draw_vertex(x+12,y+12)
draw_vertex(x-(other.x-x)*30+fleh,y-(other.y-y)*30+fleh)
draw_vertex(x-(other.x-x)*30+fleh,y-(other.y-y)*30)
draw_vertex(x+12,y)
draw_primitive_end()

draw_primitive_begin(pr_trianglestrip)
draw_vertex(x+12,y)
draw_vertex(x-(other.x-x)*30+fleh,y-(other.y-y)*30)
draw_vertex(x,y)
draw_vertex(x-(other.x-x)*30,y-(other.y-y)*30)
draw_primitive_end()

draw_primitive_begin(pr_trianglestrip)
draw_vertex(x,y)
draw_vertex(x-(other.x-x)*30,y-(other.y-y)*30)
draw_vertex(x,y+12)
draw_vertex(x-(other.x-x)*30,y-(other.y-y)*30+fleh)
draw_primitive_end()
}
}
}

surface_reset_target()


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_blend_mode(bm_add)
draw_surface_ext(surf,0,0,1,1,0,c_white,0.1)

draw_set_blend_mode(bm_normal)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
